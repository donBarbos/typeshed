from _typeshed import Incomplete

from authlib.jose import BaseClaims

class ClientMetadataClaims(BaseClaims):
    REGISTERED_CLAIMS: list[str]

    def validate(self) -> None: ...
    @classmethod
    def get_claims_options(self, metadata: dict[str, Incomplete]) -> dict[Incomplete, Incomplete]: ...
    def validate_token_endpoint_auth_signing_alg(self) -> None: ...
    def validate_application_type(self) -> None: ...
    def validate_sector_identifier_uri(self) -> None: ...
    def validate_subject_type(self) -> None: ...
    def validate_id_token_signed_response_alg(self) -> None: ...
    def validate_id_token_encrypted_response_alg(self) -> None: ...
    def validate_id_token_encrypted_response_enc(self) -> None: ...
    def validate_userinfo_signed_response_alg(self) -> None: ...
    def validate_userinfo_encrypted_response_alg(self) -> None: ...
    def validate_userinfo_encrypted_response_enc(self) -> None: ...
    def validate_default_max_age(self) -> None: ...
    def validate_require_auth_time(self) -> None: ...
    def validate_default_acr_values(self) -> None: ...
    def validate_initiate_login_uri(self) -> None: ...
    def validate_request_object_signing_alg(self) -> None: ...
    def validate_request_object_encryption_alg(self) -> None: ...
    def validate_request_object_encryption_enc(self) -> None: ...
    def validate_request_uris(self) -> None: ...
