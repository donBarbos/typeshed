from _typeshed import Incomplete

from docutils import nodes
from docutils.transforms import Transform

__docformat__: str

class SectNum(Transform):
    default_priority: int
    maxdepth: Incomplete
    startvalue: Incomplete
    prefix: Incomplete
    suffix: Incomplete
    def apply(self) -> None: ...
    def update_section_numbers(self, node, prefix=(), depth: int = 0) -> None: ...

class Contents(Transform):
    default_priority: int
    toc_id: Incomplete
    backlinks: Incomplete
    def apply(self) -> None: ...
    def build_contents(self, node, level: int = 0): ...
    def copy_and_filter(self, node): ...

class ContentsFilter(nodes.TreeCopyVisitor):
    def get_entry_text(self): ...
    def visit_citation_reference(self, node) -> None: ...
    def visit_footnote_reference(self, node) -> None: ...
    def visit_image(self, node) -> None: ...
    def ignore_node_but_process_children(self, node) -> None: ...
    visit_problematic = ignore_node_but_process_children
    visit_reference = ignore_node_but_process_children
    visit_target = ignore_node_but_process_children
